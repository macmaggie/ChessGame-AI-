<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BoardPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>